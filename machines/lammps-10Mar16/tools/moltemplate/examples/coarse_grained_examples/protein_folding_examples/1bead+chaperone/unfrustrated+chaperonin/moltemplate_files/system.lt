write_once("Data Boundary") {
  0.0  20.0  xlo xhi
  0.0  20.0  ylo yhi
  0.0  20.0  zlo zhi
}


import "chaperonin.lt"
import "1beadUnfrustrated_variants.lt"


chaperinin = new Chaperonin     # (hollow chaperonin, encloses protein)
protein    = new 1beadUnfolded  # (unfolded conformation, unfrustrated protein)



# Now define interactions between the "c" atom in the 
# chaperone and the "B", "L", "N" atoms in the protein:

write_once("In Settings") {
  pair_coeff @atom:Chaperonin/C @atom:1beadUnfrustrated/B  table  table_chaperonin_h=0.dat CH_H0
  pair_coeff @atom:Chaperonin/C @atom:1beadUnfrustrated/L  table  table_chaperonin_h=0.dat CH_H0
  pair_coeff @atom:Chaperonin/C @atom:1beadUnfrustrated/N  table  table_chaperonin_h=0.dat CH_H0
  # Note: In this example, the chaperone is playing the role of a repulsive wall
  # (confinement). To use a sticky chaperonin, replace the first line with this:
  # pair_coeff @atom:Chaperonin/C @atom:1beadUnfrustrated/B  table  table_chaperonin_h=0.475.dat CH_H0.475
}



# LAMMPS has many available force field styles (and atom styles). 
# Here, we pick the ones which work well for this molecular model:

write_once("In Init") {
  # --- Default options for the "1BeadUnfrustrated" protein model ---
  # ---            (These can be overridden later.)             ---
  units           lj
  atom_style      full
  bond_style      hybrid harmonic
  angle_style     hybrid harmonic
  dihedral_style  hybrid charmm
  pair_style      hybrid lj/charmm/coul/charmm/inter es4k4l maxmax 3.5 4.0 table spline 1181
  pair_modify     mix arithmetic
  special_bonds   lj 0.0 0.0 1.0   #(turn on "1-4" interactions)
}
