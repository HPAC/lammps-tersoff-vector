
import "oplsaa.lt"    # <-- defines the "OPLSAA" force field


CH3 inherits OPLSAA {

  # atom-id  mol-id atom-type  charge     x             y                z

  write("Data Atoms") {
    $atom:C  $mol:... @atom:80  0.00   0.000000    0.000000          0.000000
    $atom:H1 $mol:... @atom:85  0.00   0.000000   0.6310438442242609 0.8924307629540046
    $atom:H2 $mol:... @atom:85  0.00   0.000000   0.6310438442242609 -0.8924307629540046
    $atom:H3 $mol:... @atom:85  0.00  -0.8924307629540046 -0.6310438442242609 0.000000
  }

  # Atom type numbers (@atom:80,@atom:85) are defined in "oplsaa.lt".  Excerpt:
  #   @atom:80 12.011   #CT "Alkane CH3-" 6 partial charge=-0.18
  #   @atom:81 12.011   #CT "Alkane -CH2-" 6 partial charge=-0.12
  #   @atom:85 1.008    #HC "Alkane H-C" 1 partial charge=0.06
  # In this example, atomic charges are generated by atom type (according to
  # rules in oplsaa.lt), and can be omitted. Just leave them as "0.00" for now.
  # The "..." in "$mol:..." tells moltemplate that this molecule may be part
  # of a larger molecule, and (if so) to use the larger parent object's 
  # molecule id number as it's own.

  # Now specify which pairs of atoms are bonded:
  write('Data Bond List') {
    $bond:CH1 $atom:C $atom:H1
    $bond:CH2 $atom:C $atom:H2
    $bond:CH3 $atom:C $atom:H3
  }

} # CH3



# Optional: Shift all the coordinates in the +Y direction by 0.4431163.
#           This way, the carbon atom is no longer located at 0,0,0, but the
#           axis of an alkane chain containing this monomer is at 0,0,0.
#           (This makes it more convenient to construct a polymer later.
#            If this is confusing, then simply add 0.4431163 to the Y 
#            coordinates in the "Data Atoms" section above.)

CH3.move(0,0.4431163,0)




######### (scratchwork calculations for the atomic coordinates) #########
# Lcc = 1.5350 # length of the C-C bond (Sp3)
# Lch = 1.0930 # length of the C-H bond
# theta=2*atan(sqrt(2)) # ~= 109.5 degrees = tetrahedronal angle (C-C-C angle)
# DeltaXc = Lcc*sin(theta/2)  # = 1.2533222517240594
# DeltaYc = Lcc*cos(theta/2)  # = 0.8862326632060754
#                             # 0.5*DeltaYc = 0.4431163316030377
# DeltaZh = Lch*sin(theta/2)  # = 0.8924307629540046
# DeltaYh = Lch*cos(theta/2)  # = 0.6310438442242609

