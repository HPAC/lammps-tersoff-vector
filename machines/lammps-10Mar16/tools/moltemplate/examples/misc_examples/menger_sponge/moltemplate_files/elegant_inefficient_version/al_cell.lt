# "AlCell" defines the 4-atom FCC unit cell 
# of Aluminum (with a 4.05 angstrom spacing)

AlCell {

  # AtomID  MolID(IGNORE!) AtomType Charge   X    Y     Z

  write("Data Atoms") {
    $atom:AlC  $mol:...  @atom:Al    0.0   0.000 0.000 0.000
    $atom:AlX  $mol:...  @atom:Al    0.0   0.000 2.025 2.025
    $atom:AlY  $mol:...  @atom:Al    0.0   2.025 0.000 2.025
    $atom:AlZ  $mol:...  @atom:Al    0.0   2.025 2.025 0.000
  }

  write_once("In Init") {
    units        metal
    atom_style   full      # <- Requires each atom has a MolID and Charge.
                           #    This is not necessary.  (Why use "full"?
                           #    The "full" atom style is useful if you want to
                           #    mix the aluminum with other molecules later.
                           #    Otherwise, just use "atom_style atomic", and
                           #    and remove the 2nd and 4th columns above.)
    pair_style	 eam/alloy
  }

  write_once("In Settings") {
    pair_coeff   * * Al99.eam.alloy Al
  }

  write_once("Data Masses") {
    @atom:Al 27.0
  }

}  # AlCell





# Here is an alternate way to define AlCell 
# using "scale(4.05)" to select the lattice spacing:
#
#FccCell {
#  write("Data Atoms") {
#    $atom:AlC $mol:... @atom:Al  0.0  0.0 0.0 0.0
#    $atom:AlX $mol:... @atom:Al  0.0  0.0 0.5 0.5
#    $atom:AlY $mol:... @atom:Al  0.0  0.5 0.0 0.5
#    $atom:AyZ $mol:... @atom:Al  0.0  0.5 0.5 0.0
#  }
#  write_once("Data Masses") {
#    @atom:Al 27.0
#  }
#  write_once("In Init") {
#    units        metal
#    atom_style   full
#    pair_style	 eam/alloy
#  }
#  write_once("In Settings") {
#    pair_coeff   * * Al99.eam.alloy Al
#  }
#} 
#
#AlCell = FccCell.scale(4.05)
#
